Guidelines for the API:
o symmetrical, client side should be mirrored in the server
o clean, small API
o fast data structures (rb-tree, when they come available)
o api-use should be self documenting
o multiple queries in api. Xfr stuff

o build simple: just query function, built on the cool stuff
o make questions fqdns -- add last dot
o zone structure -- only as rb-tree or other radix tree
o compression (only ownernames?)

o Key2DS, also for offline keys -- need to parse them ofcourse

o Tsig will probably become an interface which has all configuration
  stuff, but this will come later. Config which has Tsig function

Todo:
* Parsing from strings, going with goyacc and .cz lexer?
* encoding NSEC3/NSEC bitmaps, DEcoding works
* HIP RR (needs list of domain names, need slice stuff for that)
* Is subdomain, is glue helper functions for this kind of stuff

Issues:
* Check the network order, it works now, but this is on Intel??
* Make the testsuite work with public DNS servers
* pack/Unpack smaller. EDNS 'n stuff can be folded in

Examples:
* Test impl of nameserver, with a small zone, 1 KSK and online  signing
